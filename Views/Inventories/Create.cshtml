@model InventoryCreateViewModel

<h2>Create Inventory</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<form asp-action="Create" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories" id="categorySelect"></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>
    <div class="form-group" id="customCategoryDiv" style="display:none;">
        <label asp-for="CustomCategoryName"></label>
        <input asp-for="CustomCategoryName" class="form-control" />
        <span asp-validation-for="CustomCategoryName" class="text-danger"></span>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var categorySelect = document.getElementById('categorySelect');
            var customCategoryDiv = document.getElementById('customCategoryDiv');

            function toggleCustomCategory() {
                if (categorySelect.value === '-1') {
                    customCategoryDiv.style.display = 'block';
                } else {
                    customCategoryDiv.style.display = 'none';
                }
            }

            categorySelect.addEventListener('change', toggleCustomCategory);

            // Initial check on page load
            toggleCustomCategory();
        });
    </script>
    <div class="form-group">
        <label>Upload Documents, PDFs, Photos</label>
        <div id="dropzone" class="border border-primary rounded p-3 mb-3" style="min-height: 150px;">
            <p>Drag and drop files here or click to select files</p>
            <input type="file" id="fileInput" name="files" multiple style="display:none;" />
        </div>
        <ul id="fileList" class="list-group"></ul>

    </div>

    <script>
        const dropzone = document.getElementById('dropzone');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');
        let selectedFiles = new DataTransfer();

        dropzone.addEventListener('click', () => fileInput.click());

        dropzone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropzone.classList.add('bg-light');
        });

        dropzone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            dropzone.classList.remove('bg-light');
        });

        dropzone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropzone.classList.remove('bg-light');
            handleFiles(e.dataTransfer.files);
        });

        fileInput.addEventListener('change', () => {
            handleFiles(fileInput.files);
        });

        function handleFiles(files) {
            // Clear existing file list display
            fileList.innerHTML = '';

            // Add new files to our DataTransfer object
            for (let i = 0; i < files.length; i++) {
                selectedFiles.items.add(files[i]);

                // Display file in the list
                const li = document.createElement('li');
                li.textContent = files[i].name + ' (' + formatFileSize(files[i].size) + ')';
                li.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');

                // Add remove button
                const removeBtn = document.createElement('button');
                removeBtn.type = 'button';
                removeBtn.className = 'btn btn-sm btn-outline-danger';
                removeBtn.textContent = 'Remove';
                removeBtn.onclick = () => removeFile(i);
                li.appendChild(removeBtn);

                fileList.appendChild(li);
            }

            // Update the file input with our selected files
            fileInput.files = selectedFiles.files;
        }

        function removeFile(index) {
            // Remove file from DataTransfer
            selectedFiles.items.remove(index);

            // Update the file input
            fileInput.files = selectedFiles.files;

            // Refresh the display
            fileList.innerHTML = '';
            for (let i = 0; i < selectedFiles.files.length; i++) {
                const li = document.createElement('li');
                li.textContent = selectedFiles.files[i].name + ' (' + formatFileSize(selectedFiles.files[i].size) + ')';
                li.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');

                const removeBtn = document.createElement('button');
                removeBtn.type = 'button';
                removeBtn.className = 'btn btn-sm btn-outline-danger';
                removeBtn.textContent = 'Remove';
                removeBtn.onclick = () => removeFile(i);
                li.appendChild(removeBtn);

                fileList.appendChild(li);
            }
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>



    <div class="form-group">
        <label asp-for="ItemName"></label>
        <input asp-for="ItemName" class="form-control" />
        <span asp-validation-for="ItemName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ItemDescription"></label>
        <textarea asp-for="ItemDescription" class="form-control"></textarea>
        <span asp-validation-for="ItemDescription" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Brand"></label>
        <input asp-for="Brand" class="form-control" />
        <span asp-validation-for="Brand" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Model"></label>
        <input asp-for="Model" class="form-control" />
        <span asp-validation-for="Model" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Quantity"></label>
        <input asp-for="Quantity" type="number" class="form-control" />
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" type="number" step="0.01" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Weight"></label>
        <input asp-for="Weight" type="number" step="0.01" class="form-control" />
        <span asp-validation-for="Weight" class="text-danger"></span>
    </div>
    <div class="form-check">
        <input asp-for="InStock" class="form-check-input" />
        <label asp-for="InStock" class="form-check-label"></label>
    </div>
    <div class="form-check">
        <input asp-for="Fragile" class="form-check-input" />
        <label asp-for="Fragile" class="form-check-label"></label>
    </div>
    <div class="form-check">
        <input asp-for="Perishable" class="form-check-input" />
        <label asp-for="Perishable" class="form-check-label"></label>
    </div>

    <div class="form-group form-check">
        <input asp-for="IsPublic" class="form-check-input" type="checkbox" />
        <label class="form-check-label" asp-for="IsPublic">Make this inventory public</label>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>
