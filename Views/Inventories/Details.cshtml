@model Inventory_Management_Requirements.Models.InventoryDetailsViewModel

@{
    ViewBag.Title = Model.Inventory.Title;
    Layout = "_Layout";
}

<div class="container mt-4">
    <h1>@Model.Inventory.Title</h1>
    <p>
        <span class="badge badge-@(Model.Inventory.IsPublic ? "success" : "secondary")">
            @(Model.Inventory.IsPublic ? "Public" : "Private") Inventory
        </span>
    </p>
    <p>@Html.Raw(Model.Inventory.Description)</p>

    @if (User.IsInRole("Admin"))
    {
        <form asp-action="Delete" asp-route-id="@Model.Inventory.Id" method="post"
            onsubmit="return confirm('Are you sure you want to delete this inventory?');" style="display: inline;">
            <button type="submit" class="btn btn-danger btn-sm">Delete Inventory</button>
        </form>
    }

    <partial name="_Tabs" model="Model" />

    <div class="tab-content" id="inventoryTabsContent">
        <div class="tab-pane fade show active" id="items" role="tabpanel" aria-labelledby="items-tab">
            <h3>Items</h3>


            @if (Model.Items != null && Model.Items.Any())
            {
                <partial name="~/Views/Items/_ItemList.cshtml" model="Model.Items" />
            }
            else
            {
                <p>No items found.</p>
            }
        </div>
        <div class="tab-pane fade" id="attachments" role="tabpanel" aria-labelledby="attachments-tab">
            <h3>Attachments</h3>
            <p>Created by: @Model.Inventory.CreatedBy?.UserName</p>
            <div class="mb-3">
                <a href="@Url.Action("DownloadInventoryCsv", "Inventories", new { id = Model.Inventory.Id })"
                    class="btn btn-success">
                    <i class="fas fa-download"></i> Download All Details (CSV)
                </a>
            </div>
            @if (Model.Attachments != null && Model.Attachments.Count > 0)
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>File Name</th>
                            <th>Type</th>
                            <th>Size</th>
                            <th>Uploaded By</th>
                            <th>Upload Date</th>
                            <th>Access</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var attachment in Model.Attachments)
                        {
                            <tr>
                                <td>@attachment.FileName</td>
                                <td>@attachment.FileType</td>
                                <td>@attachment.FileSize bytes</td>
                                <td>@attachment.UploadedBy?.UserName</td>
                                <td>@attachment.UploadedAt.ToString("g")</td>
                                <td>@string.Join(", ", Model.AccessList.Select(a => a.User.UserName))</td>
                                <td>
                                    <a href="@Url.Action("DownloadAttachment", "Inventories", new { id = attachment.Id })" class="btn btn-sm btn-primary me-2">Download</a>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="7">
                                    <!-- Attachment-specific comments -->
                                    <div class="attachment-comments mt-2 mb-3">
                                        <h6>Comments</h6>
                                        <partial name="~/Views/Inventories/_Chat.cshtml"
                                            model="new Inventory_Management_Requirements.Models.ChatViewModel { Comments = attachment.Comments.ToList(), AttachmentId = attachment.Id }" />
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No attachments found.</p>
            }
        </div>
        <div class="tab-pane fade" id="access" role="tabpanel" aria-labelledby="access-tab">
            <partial name="~/Views/Access/Index.cshtml" model="Model.AccessList" view-data="ViewData" />
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/drag-drop.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Handle comment form submission for both inventory and attachment comments
            document.addEventListener('submit', function (e) {
                if (e.target && e.target.id === 'commentForm') {
                    e.preventDefault();

                    const form = e.target;
                    const commentContent = form.querySelector('#commentContent').value.trim();
                    const inventoryId = @Model.Inventory.Id;

                    if (!commentContent) {
                        alert('Please enter a comment.');
                        return;
                    }

                    // Check if this is an attachment comment by looking for data-attachment-id attribute
                    const attachmentId = form.getAttribute('data-attachment-id');

                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    let body = `inventoryId=${inventoryId}&content=${encodeURIComponent(commentContent)}`;
                    if (attachmentId) {
                        body += `&attachmentId=${attachmentId}`;
                    }

                    fetch('/Inventories/AddComment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'RequestVerificationToken': token
                        },
                        body: body
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Clear the form
                                form.querySelector('#commentContent').value = '';
                                // Reload the page to show the new comment
                                location.reload();
                            } else {
                                alert('Error: ' + data.message);
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred while adding the comment.');
                        });
                }
            });


        });
    </script>
}
